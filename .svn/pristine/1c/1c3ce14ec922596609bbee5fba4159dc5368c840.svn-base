#ifndef __ATEL_ZAZU_HAL_H
#define __ATEL_ZAZU_HAL_H
#ifdef __cplusplus
 extern "C" {
#endif

#include "include.h"

#include "nordic_common.h"
#include "nrf.h"
#include "ble_hci.h"
#include "ble_advdata.h"
#include "ble_advertising.h"
#include "ble_conn_params.h"
#include "nrf_ble_gatt.h"
#include "nrf_ble_qwr.h"
#include "nrf_sdh.h"
#include "nrf_sdh_soc.h"
#include "nrf_sdh_ble.h"
#include "nrf_sdm.h"
#include "nrf_soc.h"
#include "nrf_fstorage_sd.h"
#include "nrf_gpio.h"
#include "nrf_gpiote.h"
#include "nrf_saadc.h"
#include "nrf_delay.h"
#include "nrf_drv_gpiote.h"
#include "nrf_drv_pwm.h"
#include "nrf_drv_saadc.h"
#include "nrf_drv_spi.h"
#include "nrf_drv_timer.h"
#include "nrf_drv_twi.h"
#include "nrf_drv_wdt.h"
#include "nrf_pwr_mgmt.h"
#include "nrf_temp.h"
#include "bsp_btn_ble.h"
#include "app_timer.h"
#include "app_util_platform.h"
#include "app_error.h"
#include "app_uart.h"
#include "ble_dtm.h"

#if defined (UART_PRESENT)
#include "nrf_uart.h"
#endif
#if defined (UARTE_PRESENT)
#include "nrf_uarte.h"
#endif

#include "nrf_log.h"
#include "nrf_log_ctrl.h"
#include "nrf_log_default_backends.h"
#include "nrf_bootloader_info.h"

#define ZAZU_HARDWARE_ID_BLE (0x5100)
#define ZAZU_HARDWARE_ID_CAN (0x5101)

/* GPIO_MCU_SLEEP_DEV: UART to DEV TX */
/* GPIO_MCU_SLEEP_DEV1: UART to DEV RX */
#define ATEL_ALL_GPIOS \
        ATEL_GPIO_ASSOC(GPIO_MCU_A,                 1, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_MCU_B,                 1, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_MCU_C,                 0, 0, 1, monet_data.mux_can) \
        ATEL_GPIO_ASSOC(GPIO_MCU_D,                 0, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_MCU_E,                 0, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_G_SENSOR_INT,          1, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_LIGTH_RESISTOR_INT,    1, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_BAT_ADC_EN,            0, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_MCU_WAKE_DEV,          0, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_DEV_WAKE_MCU,          0, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_V_DEV_EN,              0, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_DEV_EN,                0, 0, 1, 1) \
        ATEL_GPIO_ASSOC(GPIO_MCU_BAT_EN,            0, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_BAT_CHARGE_EN,         0, 1, 1, 1) \
        ATEL_GPIO_ASSOC(GPIO_MCU_DEV_IO_EN,         0, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_MCU_SLEEP_DEV,         0, 1, 0, 1) \
        ATEL_GPIO_ASSOC(GPIO_MCU_SLEEP_DEV1,        1, 0, 0, 0) \
        ATEL_GPIO_ASSOC(GPIO_CAN_UART_SWITCH_KEY,   1, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_SYS_PWR_EN,            0, 0, 1, 1) \
        ATEL_GPIO_ASSOC(GPIO_CHRG_SLEEP_EN,         0, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_CAN_VREF,              1, 0, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_CAN_INT,               1, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_POWER_KEY,             1, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_TMP_ALARM,             1, 1, 1, 0) \
        ATEL_GPIO_ASSOC(GPIO_SOLAR_CHARGE_SWITCH,   0, 1, 1, 0)

#define PIN_NOT_VALID               (0xffffffff)

#define P026_BLE_SPI1_CS_FAKE       NRF_GPIO_PIN_MAP(0, 2)
#define P026_BLE_SPI1_CS            NRF_GPIO_PIN_MAP(0, 26)
#define P027_BLE_SPI1_SCK           NRF_GPIO_PIN_MAP(0, 27)
#define P004_BLE_SPI1_MOSI          NRF_GPIO_PIN_MAP(0, 4)
#define P005_BLE_SPI1_MISO          NRF_GPIO_PIN_MAP(0, 5)
#define P006_GPIO37_UART1_RXD       NRF_GPIO_PIN_MAP(0, 6)
#define P007_SWITCH_KEY             NRF_GPIO_PIN_MAP(0, 7)
#define P008_GPIO4_UART1_TXD        NRF_GPIO_PIN_MAP(0, 8)
#define P108_BLE_I2C1_SDA           NRF_GPIO_PIN_MAP(1, 8)
#define P109_BLE_I2C1_SCL           NRF_GPIO_PIN_MAP(1, 9)
#define P011_VSYS_EN                NRF_GPIO_PIN_MAP(0, 11)
#define P012_GPIO15_ESP32_TO_BLE    NRF_GPIO_PIN_MAP(0, 12)
#define P013_SOLAR_CHARGER_SWITCH   NRF_GPIO_PIN_MAP(0, 13)
#define P014_GPIO14_ESP_WAKEUP_BLE  NRF_GPIO_PIN_MAP(0, 14)
#define P015_BLE_MUX                NRF_GPIO_PIN_MAP(0, 15)
#define P016_BLE_UART2_TXD          NRF_GPIO_PIN_MAP(0, 16)
#define P017_BLE_UART2_RXD          NRF_GPIO_PIN_MAP(0, 17)
#define P020_BLE_WAKEUP_ESP         NRF_GPIO_PIN_MAP(0, 20)
#define P021_CHRG_SLEEP_EN          NRF_GPIO_PIN_MAP(0, 21)
#define P022_BLE_ESP_EN             NRF_GPIO_PIN_MAP(0, 22)
#define P024_BLE_I2C2_SCL           NRF_GPIO_PIN_MAP(0, 24)
#define P100_BLE_I2C2_SDA           NRF_GPIO_PIN_MAP(1, 0)
#define P101_CAN_VREF               NRF_GPIO_PIN_MAP(1, 1)
#define P104_G_SENSOR_INT           NRF_GPIO_PIN_MAP(1, 4)
#define P106_DCDC_3V3_EN            NRF_GPIO_PIN_MAP(1, 6)
#define P107_GPIO13_ESP_TO_APP      NRF_GPIO_PIN_MAP(1, 7)
#define P025_CAN_INT                NRF_GPIO_PIN_MAP(0, 25)
#define P023_GREEN_LED1             NRF_GPIO_PIN_MAP(0, 23)
#define P105_RED_LED1               NRF_GPIO_PIN_MAP(1, 5)
#define P103_POWER_KEY              NRF_GPIO_PIN_MAP(1, 3)
#define P019_TMP_ALARM              NRF_GPIO_PIN_MAP(0, 19)
#define P003_ADC_EN                 NRF_GPIO_PIN_MAP(0, 3)
#define P028_VBAT_ADC               NRF_GPIO_PIN_MAP(0, 28)
#define P029_12V_IN_ADC             NRF_GPIO_PIN_MAP(0, 29)
#define P031_12V_S_IN_ADC           NRF_GPIO_PIN_MAP(0, 31)

#define ADC_ARRAY_BUFFER_EN (1)
#define ADC_ARRAY_SIZE (5)
#define ADC_CHANNELS_CNT (3)
#define ADC_RESOLUTION_VALUE (1.1375)                   // 4095/3600, 12 BIT
#define ADC_BUB_VOL_MULTIPLIER_FACTOR (0.364864)        // 27 / (27 + 47)
#define ADC_BUB_VOL_MODIFICATION_VALUE (0)
#define ADC_BUB_MEASURE_ENABLED (1)
#define ADC_BUB_MEASURE_NOT_ENABLED (0)
#define ADC_VIN_VOL_MULTIPLIER_FACTOR (0.101317)        // 10 / (10 + 88.7)
#define ADC_VIN_VOL_MODIFICATION_VALUE (0)
#define ADC_VSIN_VOL_MULTIPLIER_FACTOR (0.101317)       // 10 / (10 + 88.7)
#define ADC_VSIN_VOL_MODIFICATION_VALUE (0)

#define BLE_DATA_CHANNEL_SUPPORT (0)
#define BLE_ADVERTISING_ENABLE_BY_DEFAULT (0)
#define BLE_CONNECTION_SUPPORT_HEARTBEAT (0)
#define BLE_BYPASS_TEST_ENABLE (0)
#define BLE_BYPASS_TEST_ONEWAY_TX (0)

#define GREEN_LED_FLASH_TIME_MS (5000)
#define LED_FLASH_TOGGLE_MS     (500)
#define CHANGER_RESUME_S       (10)   // the charger_restart_check() was called in 1s function,here unit is sencond.

// Zazu P2 board: 0 Wake, 1 Sleep
// Zazu P3 board: 0 Sleep, 1 Wake
#define CHARGER_CHIP_SLEEP_VALUE (0)
#define CHARGER_CHIP_WAKE_VALUE (1)

#define DEVICE_POWER_KEY_SUPPORT (0)
#define DEVICE_BUTTON_FOR_FACTORY (1)

#define UART_BAUDRATE_SELECT (2)

#if (UART_BAUDRATE_SELECT == 0)
#define UART_TO_APP_BAUDRATE NRF_UART_BAUDRATE_9600
#elif (UART_BAUDRATE_SELECT == 1)
#define UART_TO_APP_BAUDRATE NRF_UART_BAUDRATE_115200
#elif (UART_BAUDRATE_SELECT == 2)
#define UART_TO_APP_BAUDRATE NRF_UART_BAUDRATE_230400
#elif (UART_BAUDRATE_SELECT == 3)
#define UART_TO_APP_BAUDRATE NRF_UARTE_BAUDRATE_460800
#elif (UART_BAUDRATE_SELECT == 4)
#define UART_TO_APP_BAUDRATE NRF_UART_BAUDRATE_921600
#else
#error "UART_BAUDRATE_SELECT Unknown."
#endif

#define BLE_FUNCTION_OFF (0)
#define BLE_FUNCTION_ON (1)
#define BLE_FUNCTION_ONOFF BLE_FUNCTION_ON

#define BLE_PROFILE_NONE (0)
#define BLE_PROFILE_CAMERA (1)
#define BLE_PROFILE_SELECTION BLE_PROFILE_CAMERA

#define BLE_DTM_ENABLE (1)

#define SPI_CAN_CONTROLLER_EN (1)

#define ZAZU_HARDWARE_NOCAN_WITHCHARGER (0)
#define ZAZU_HARDWARE_VERSION ZAZU_HARDWARE_NOCAN_WITHCHARGER

#define DFU_FLAG_REGISTER  (*((uint32_t *)(0x2001fffc)))
#define DFU_FLAG_REGISTER1 (*((uint32_t *)(0x2001fff8)))
#define DFU_FLAG_VALUE_FROM_BOOT (0xDFDFDFDF)
#define DFU_FLAG_VALUE_FROM_APP (0xFDFDFDFD)
#define DFU_FLAG_VALUE_FROM_DTME (0xDDDDDDDD)
#define DFU_FLAG_VALUE_FROM_DTMEX (0xEDEDEDED)
#define DFU_FLAG_VALUE_FROM_POWEROFF (0x0F0F0F0F)
#define DFU_FLAG_VALUE_FROM_SHIPPING_MODE (0x0E0E0E0E)
#define DFU_FLAG_VALUE_FROM_INVALID (0)

#ifdef __cplusplus
}
#endif
#endif /* __ATEL_ZAZU_HAL_H */

